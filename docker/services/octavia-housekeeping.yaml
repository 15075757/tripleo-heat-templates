heat_template_version: pike

description: >
  OpenStack Octavia service configured with Puppet

parameters:
  DockerNamespace:
    description: namespace
    default: 'tripleoupstream'
    type: string
  DockerOctaviaHousekeepingImage:
    description: image
    default: 'centos-binary-octavia-housekeeping:latest'
    type: string
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json


resources:

  ContainersCommon:
    type: ./containers-common.yaml

  OctaviaHousekeepingPuppetBase:
    type: ../../puppet/services/octavia-housekeeping.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Octavia housekeeping role.
    value:
      service_name: {get_attr: [OctaviaHousekeepingPuppetBase, role_data, service_name]}
      config_settings: {get_attr: [OctaviaHousekeepingPuppetBase, role_data, config_settings]}
      step_config: &step_config
        get_attr: [OctaviaHousekeepingPuppetBase, role_data, step_config]
      service_config_settings: {get_attr: [OctaviaHousekeepingPuppetBase, role_data, service_config_settings]}
      # BEGIN DOCKER SETTINGS #
      puppet_config:
        config_volume: octavia
        puppet_tags: octavia_config
        step_config: *step_config
        config_image: &octavia_image
          list_join:
            - '/'
            - [ {get_param: DockerNamespace}, {get_param: DockerOctaviaHousekeepingImage} ]
      kolla_config:
        /var/lib/kolla/config_files/octavia_housekeeping.json:
          command: /usr/bin/octavia-housekeeping --config-file /usr/share/octavia/octavia-dist.conf --config-file /etc/octavia/octavia.conf --log-file /var/log/octavia/housekeeping.log --config-dir /etc/octavia/conf.d/common --config-dir /etc/octavia/conf.d/octavia-housekeeping
      docker_config:
        step_2:
          octavia_housekeeping_init_dirs:
            start_order: 0
            image: *octavia_image
            user: root
            volumes:
              - /var/lib/config-data/octavia/etc/octavia:/etc/octavia/
            command: ['/bin/bash', '-c', 'mkdir -p /etc/octavia/conf.d/octavia-housekeeping; chown -R octavia:octavia /etc/octavia/conf.d/octavia-housekeeping']
        step_4:
          octavia_housekeeping:
            start_order: 2
            image: *octavia_image
            net: host
            privileged: false
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/lib/kolla/config_files/octavia_housekeeping.json:/var/lib/kolla/config_files/config.json:ro
                  - /var/lib/config-data/octavia/etc/octavia/:/etc/octavia/:ro
                  - /var/log/containers/octavia:/var/log/octavia
            environment:
              - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
      host_prep_tasks:
        - name: create persistent logs directory
          file:
            path: /var/log/containers/octavia
            state: directory
      upgrade_tasks:
        - name: Stop and disable octavia_housekeeping service
          tags: step2
          service: name=openstack-octavia-housekeeping state=stopped enabled=no
