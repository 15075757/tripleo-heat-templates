heat_template_version: 2014-10-16
description: 'Upgrade for Pacemaker deployments'

parameters:

  controller_servers:
    type: json
  compute_servers:
    type: json
  blockstorage_servers:
    type: json
  objectstorage_servers:
    type: json
  cephstorage_servers:
    type: json
  input_values:
    type: json
    description: input values for the software deployments

  UpgradeLevelNovaCompute:
    type: string
    description: Nova Compute upgrade level
    default: ''

resources:
  # TODO(jistr): for Mitaka->Newton upgrades and further we can use
  # map_merge with input_values instead of feeding params into scripts
  # via str_replace on bash snippets

  ComputeDeliverUpgradeScriptConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config:
        list_join:
        - ''
        - - str_replace:
              template: |
                #!/bin/bash
                upgrade_level_nova_compute='UPGRADE_LEVEL_NOVA_COMPUTE'
              params:
                UPGRADE_LEVEL_NOVA_COMPUTE: {get_param: UpgradeLevelNovaCompute}
          - get_file: major_upgrade_compute.sh

  ComputeDeliverUpgradeScriptDeployment:
    type: OS::Heat::SoftwareDeploymentGroup
    properties:
      servers:  {get_param: compute_servers}
      config: {get_resource: ComputeDeliverUpgradeScriptConfig}
      input_values: {get_param: input_values}

  ObjectStorageDeliverUpgradeScriptConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: {get_file: major_upgrade_object_storage.sh}

  ObjectStorageDeliverUpgradeScriptDeployment:
    type: OS::Heat::SoftwareDeploymentGroup
    properties:
      servers:  {get_param: objectstorage_servers}
      config: {get_resource: ObjectStorageDeliverUpgradeScriptConfig}
      input_values: {get_param: input_values}

  CephStorageDeliverUpgradeScriptConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: {get_file: major_upgrade_ceph_storage.sh}

  CephStorageDeliverUpgradeScriptDeployment:
    type: OS::Heat::SoftwareDeploymentGroup
    properties:
      servers:  {get_param: cephstorage_servers}
      config: {get_resource: CephStorageDeliverUpgradeScriptConfig}
      input_values: {get_param: input_values}
