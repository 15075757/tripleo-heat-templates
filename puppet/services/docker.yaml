heat_template_version: pike

description: >
  Configures docker on the host

parameters:
  DockerInsecureRegistryAddress:
    description: Optional. The IP Address and Port of an insecure docker
                 namespace that will be configured in /etc/sysconfig/docker.
                 The value can be multiple addresses separated by commas.
    type: comma_delimited_list
    default: []
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  DockerOptions:
    default: '--log-driver=journald --signature-verification=false --iptables=false --live-restore'
    description: Options that are used to startup the docker service.
    type: string

conditions:
  insecure_registry_is_empty: {equals : [{get_param: DockerInsecureRegistryAddress}, []]}

outputs:
  role_data:
    description: Role data for the docker service
    value:
      service_name: docker
      config_settings:
        map_merge:
          - tripleo::profile::base::docker::configure_network: true
            tripleo::profile::base::docker::network_options: "--bip=172.31.0.1/24"
            tripleo::profile::base::docker::docker_options: {get_param: DockerOptions}
          -
            if:
            - insecure_registry_is_empty
            - {}
            - tripleo::profile::base::docker::insecure_registries: {get_param: DockerInsecureRegistryAddress}
      step_config: |
        include ::tripleo::profile::base::docker
      upgrade_tasks:
        - name: Install docker packages on upgrade if missing
          tags: step3
          yum: name=docker state=latest
      update_tasks:
        block:
          - name: Stop all containers
            # xargs is preferable to docker stop $(docker ps -q) as that might generate a
            # a too long command line
            shell: docker ps -q | xargs --no-run-if-empty -n1 docker stop
          - name: Stop docker
            service:
              name: docker
              state: stopped
          - name: Update the docker package
            yum: name=docker state=latest update_cache=yes # cache for tripleo/+bug/1703830
          - name: Apply puppet which will start the service again
            shell: |
              puppet apply --detailed-exitcodes --verbose \
                --modulepath  /etc/puppet/modules:/opt/stack/puppet-modules:/usr/share/openstack-puppet/modules \
                -e "class { 'tripleo::profile::base::docker': step => 1, }"
            register: puppet_docker_apply
            failed_when: puppet_docker_apply.rc not in [0, 2]
            changed_when: puppet_docker_apply.rc == 2
        when: step|int == 2
